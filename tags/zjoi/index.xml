<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ZJOI on SHENXN</title><link>https://www.sxn.dev/tags/zjoi/</link><description>Recent content in ZJOI on SHENXN</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Tue, 20 May 2014 20:58:14 +0000</lastBuildDate><atom:link href="https://www.sxn.dev/tags/zjoi/index.xml" rel="self" type="application/rss+xml"/><item><title>[BZOJ1433][ZJOI2009]假期的宿舍（最大流）</title><link>https://www.sxn.dev/posts/zjoi2009-holiday/</link><pubDate>Tue, 20 May 2014 20:58:14 +0000</pubDate><guid>https://www.sxn.dev/posts/zjoi2009-holiday/</guid><description>&lt;p>又是一道最大流，建图很简单，源点到所有的在校学生和外校学生建一条容量为1的边，所有在校学生的床（感觉听起来怪怪的）到汇点连一条边，所有在校学生和自己的床连一条边，所有学生到他认识的在校学生的床连一条边。然后做最大流与需要住校的学生总数比较，相等就输出^_^，不相等就输出T_T（这个太逗了）。。&lt;/p></description></item><item><title>[BZOJ1862][ZJOI2006]GameZ游戏排名系统（SPLAY + TRIE / HASH）</title><link>https://www.sxn.dev/posts/zjoi-rank/</link><pubDate>Mon, 19 May 2014 13:01:02 +0000</pubDate><guid>https://www.sxn.dev/posts/zjoi-rank/</guid><description>传说中的双倍经验题，详见 {% post_link haoi2008-rank %}</description></item><item><title>[BZOJ1003][ZJOI2006]物流运输（DP + DIJKSTRA）</title><link>https://www.sxn.dev/posts/zjoi2006-trans/</link><pubDate>Sat, 17 May 2014 07:39:32 +0000</pubDate><guid>https://www.sxn.dev/posts/zjoi2006-trans/</guid><description>&lt;p>好吧这就是一道大水题，很显然的DP思路。DP状态转移方程就是(dp_i = text{min}(f_{1,i}, dp_j + k + f_{j+1,i}) (1 leq j &amp;lt; i))，其中(f_{i,j})表示从i时刻到j时刻（包括i和j）走同一条路所需的总成本。而由于n和m都很小，这个直接暴力标记不能走的点然后做一次DIJKSTRA就可以了，同时把已经计算过的(f_{i,j})存下来，以便下次使用。这样的话总体的时间复杂度大概就是（原谅我不会算，随便乱估计的）(text{O}(n^2 log_2 m))。&lt;/p></description></item><item><title>[BZOJ1861][ZJOI2006]书架（SPLAY）</title><link>https://www.sxn.dev/posts/zjoi2006-book/</link><pubDate>Fri, 02 May 2014 18:24:46 +0000</pubDate><guid>https://www.sxn.dev/posts/zjoi2006-book/</guid><description>&lt;p>听说标程是树状数组，听说树状数组跑得可快了。。好吧拿这题来学SPLAY的确有点做死不过也还算裸&lt;/p>
&lt;p>SPLAY要维护的东西很清楚，就是要单独开个数组指向SPLAY上每个节点，以方便根据编号找节点。&lt;/p></description></item></channel></rss>