<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SPLAY on SHENXN</title><link>https://www.sxn.dev/tags/splay/</link><description>Recent content in SPLAY on SHENXN</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 19 May 2014 18:50:52 +0000</lastBuildDate><atom:link href="https://www.sxn.dev/tags/splay/index.xml" rel="self" type="application/rss+xml"/><item><title>[BZOJ3595][SCOI2014]方伯伯的OJ（MAP + SPLAY）</title><link>https://www.sxn.dev/posts/scoi2014-oj/</link><pubDate>Mon, 19 May 2014 18:50:52 +0000</pubDate><guid>https://www.sxn.dev/posts/scoi2014-oj/</guid><description>&lt;p>这道题实在是坑爹，比赛的时候一度以为要两个MAP两棵SPLAY，然后感觉写着蛋疼就写了一个SPLAY 40分滚粗了。后来重新看题，发现其实AC算法也只要一个SPLAY就好了，还有一个SPLAY也可以用MAP来代替（在此BS一下PASCAL，问PASCAL党做这种题该怎么办）。&lt;/p></description></item><item><title>[BZOJ1862][ZJOI2006]GameZ游戏排名系统（SPLAY + TRIE / HASH）</title><link>https://www.sxn.dev/posts/zjoi-rank/</link><pubDate>Mon, 19 May 2014 13:01:02 +0000</pubDate><guid>https://www.sxn.dev/posts/zjoi-rank/</guid><description>传说中的双倍经验题，详见 {% post_link haoi2008-rank %}</description></item><item><title>[BZOJ1207][HNOI2005]虚拟内存（HASH + SPLAY）</title><link>https://www.sxn.dev/posts/hnoi2007-memory/</link><pubDate>Sat, 17 May 2014 16:15:33 +0000</pubDate><guid>https://www.sxn.dev/posts/hnoi2007-memory/</guid><description>&lt;p>我原本妄图做一道HASH乱搞题，本以为这道题可以HASH + 优先队列，后来发现好像不行，然后又蛋疼地敲平衡树了。一开始敲了个FANHQ_TREAP，结果被卡，一个点退化了，只好改SPLAY。虽然不是很快，不过完全不知道这道题开50S时限是什么心态。&lt;/p></description></item><item><title>[BZOJ1056][HAOI2008]排名系统（SPLAY + TRIE / HASH）</title><link>https://www.sxn.dev/posts/haoi2008-rank/</link><pubDate>Thu, 15 May 2014 16:55:41 +0000</pubDate><guid>https://www.sxn.dev/posts/haoi2008-rank/</guid><description>&lt;p>只是一道平衡树水题，其实TREAP就可以了，只是有个操作我觉得还是SPLAY写起来舒服。一开始用的TRIE维护名字，后来又用HASH写了，稍微快了一点点。。&lt;/p></description></item><item><title>[BZOJ1500][NOI2005]维修数列（SPLAY）</title><link>https://www.sxn.dev/posts/noi2005-sequence/</link><pubDate>Fri, 02 May 2014 19:34:56 +0000</pubDate><guid>https://www.sxn.dev/posts/noi2005-sequence/</guid><description>&lt;p>好像已经写了好多SPLAY了，维修数列说是最重口味的SPLAY题目了，好吧我也调了将近一上午，主要是最大子段和的地方自己YY错了，少考虑了一种情况。。&lt;/p></description></item><item><title>[BZOJ1269][AHOI2006]文本编辑器（SPLAY）</title><link>https://www.sxn.dev/posts/ahoi2006-editor/</link><pubDate>Fri, 02 May 2014 19:20:38 +0000</pubDate><guid>https://www.sxn.dev/posts/ahoi2006-editor/</guid><description>&lt;p>好吧这道题是NOI的那道EDITOR的升级版，就多了一个翻转操作，那不是改一下就行了嘛，果断继续A题&lt;/p></description></item><item><title>[BZOJ1507][NOI2003]文本编辑器（SPLAY）</title><link>https://www.sxn.dev/posts/noi2003-editor/</link><pubDate>Fri, 02 May 2014 19:16:08 +0000</pubDate><guid>https://www.sxn.dev/posts/noi2003-editor/</guid><description>&lt;p>这题我一开始用块链写的，后来也许是memcpy上的问题本地AC了八中上死活A不掉，后来也就没去改。。几天后学了SPLAY，那就用SPLAY水掉了。&lt;/p>
&lt;p>然后是代码（这个不是蛋疼模板了，我重写的SPLAY）&lt;/p></description></item><item><title>[BZOJ1861][ZJOI2006]书架（SPLAY）</title><link>https://www.sxn.dev/posts/zjoi2006-book/</link><pubDate>Fri, 02 May 2014 18:24:46 +0000</pubDate><guid>https://www.sxn.dev/posts/zjoi2006-book/</guid><description>&lt;p>听说标程是树状数组，听说树状数组跑得可快了。。好吧拿这题来学SPLAY的确有点做死不过也还算裸&lt;/p>
&lt;p>SPLAY要维护的东西很清楚，就是要单独开个数组指向SPLAY上每个节点，以方便根据编号找节点。&lt;/p></description></item></channel></rss>